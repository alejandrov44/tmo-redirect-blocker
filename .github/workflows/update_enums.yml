name: Update Enums

on:
  workflow_dispatch:
    inputs:
      newEnumType:
        description: "New enum type to add"
        required: true
        default: "NEW_TYPE"

jobs:
  update-enum:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Add New Type to Enums
      env:
        NEW_ENUM: ${{ inputs.newEnumType }}
      run: npx ts-node ./src/scripts/update_enums.ts

    - name: Run generate_extension script
      run: npm run generate_extension

    - name: Archive dist folder
      run: zip -r dist.zip dist/

    - name: Delete Previous Release
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
          const releases = await octokit.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1,
            page: 1
          });

          if (releases.data.length > 0) {
            const lastRelease = releases.data[0];
            await octokit.rest.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: lastRelease.id
            });

            console.log(`Deleted release: ${lastRelease.tag_name}`);
          } else {
            console.log("No release to delete.");
          }

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ github.run_number }}
        release_name: Lastest Release
        body_path: ./CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload dist.zip to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist.zip
        asset_name: dist.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Commit changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add ./src/enums.ts
        git commit -m "add fake url"
        git push
